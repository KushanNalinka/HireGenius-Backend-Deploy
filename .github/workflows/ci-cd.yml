# name: CI-CD
# on: [push]

# env:
#   AWS_REGION: us-east-1
#   ECR_REPO: hiregenius-backend
#   IMAGE_TAG: ${{ github.sha }}

# jobs:
#   build-deploy:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4

#     - uses: docker/setup-buildx-action@v3
#     - run: docker build -t $ECR_REPO:$IMAGE_TAG .

#     - uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ env.AWS_REGION }}

#     - run: |
#         aws ecr get-login-password --region $AWS_REGION \
#         | docker login --username AWS --password-stdin \
#           ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com
#         docker tag $ECR_REPO:$IMAGE_TAG \
#           ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
#         docker push \
#           ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

#     - uses: appleboy/ssh-action@v1
#       with:
#         host:     ${{ secrets.EC2_HOST }}
#         username: ec2-user
#         key:      ${{ secrets.EC2_SSH_KEY }}
#         script: |
#           docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
#           docker stop backend || true && docker rm backend || true
#           docker run -d --name backend -p 80:8000 \
#             -e MONGO_URL='${{ secrets.MONGO_URL }}' \
#             ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG


name: CI-CD
on: [push]

env:
  AWS_REGION: us-east-1
  ECR_REPO: hiregenius-backend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout your code (including Dockerfile at repo root)
      - uses: actions/checkout@v4

      # 2) Setup Docker Buildx
      - uses: docker/setup-buildx-action@v3

      # 3) Build the Docker image
      - name: Build Docker image
        run: docker build -t $ECR_REPO:$IMAGE_TAG .

      # 4) Configure AWS credentials
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 5) Tag & push the image to ECR
      - name: Tag and push to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin \
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com
          docker tag $ECR_REPO:$IMAGE_TAG \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
          docker push \
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      # 6) SSH into EC2 & deploy the container
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.EC2_HOST }}
          username: ec2-user
          key:      ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 1) Put on your AWS badge
            export AWS_ACCESS_KEY_ID='${{ secrets.AWS_ACCESS_KEY_ID }}'
            export AWS_SECRET_ACCESS_KEY='${{ secrets.AWS_SECRET_ACCESS_KEY }}'
            export AWS_REGION='${{ env.AWS_REGION }}'

            # 2) Log into ECR so you can pull
            aws ecr get-login-password --region $AWS_REGION \
              | docker login --username AWS --password-stdin \
                ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

            # 3) Pull the new image
            docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}

            # 4) Stop & remove the old container if itâ€™s running
            docker stop backend || true
            docker rm   backend || true

            # 5) Run the new container, passing in your Mongo URL
            docker run -d --name backend -p 80:8000 \
              -e MONGO_URL='${{ secrets.MONGO_URL }}' \
              ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/${{ env.ECR_REPO }}:${{ env.IMAGE_TAG }}
